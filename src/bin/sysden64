#!/usr/bin/env bash
#######################################
# Copyright [2024] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

readonly SYSDEN64_PATH_BL64="${SYSDEN64_PATH_BL64:-/opt/bl64}"
# shellcheck source-path=SCRIPTDIR/../../lib/bl64
source "${SYSDEN64_PATH_BL64}/bashlib64-module-api.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-ui.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-xsv.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-bsh.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-vcs.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-rxtx.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-fmt.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-txt.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-fs.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-rnd.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-module-iam.bash" &&
  source "${SYSDEN64_PATH_BL64}/bashlib64-core.bash" || exit 1

#
# Globals
#

# SysDen64 / Version
readonly SYSDEN64_VERSION='1.6.0'
# SysDen64 / Installation path
readonly SYSDEN64_PATH_ROOT="${SYSDEN64_PATH_ROOT:-/opt/sysden64}"
# SysDen64 / Application configuration setup modules
readonly SYSDEN64_PATH_LIB="${SYSDEN64_PATH_ROOT}/lib"
# SysDen64 / Application configuration boilerplates
readonly SYSDEN64_PATH_ETC="${SYSDEN64_PATH_ROOT}/etc"
# SysDen64 / Shell modules repository
# shellcheck disable=SC2034
readonly SYSDEN64_PATH_SHELLENV='.env.d'
# SysDen64 / Version placeholder
readonly SYSDEN64_PATH_VERSION='.sysden64'
# SysDen64 / Prefix
readonly SYSDEN64_PREFIX='sd64'
# SysDen64 / Profile switch marker
# shellcheck disable=SC2034
declare SYSDEN64_PROFILE_SWITCH="$BL64_VAR_OFF"

# SysDen64 / Common messages
# shellcheck disable=SC2034
{
  readonly SYSDEN64_TXT_NOT_DETECTED='tool not detected. No further action taken'
  readonly SYSDEN64_TXT_CONFIGURED='already configured. No further action taken'
  readonly SYSDEN64_TXT_WATERMARK='# Warning: configuration file generated by SysDen64. DO NOT MODIFY'
}

# SysDen64 / Modules
declare SYSDEN64_MODULE_LIST_BASE=''
SYSDEN64_MODULE_LIST_BASE+='env '
SYSDEN64_MODULE_LIST_BASE+='bash '
SYSDEN64_MODULE_LIST_BASE+='starship '
SYSDEN64_MODULE_LIST_BASE+='zsh '
SYSDEN64_MODULE_LIST_BASE+='omz '
SYSDEN64_MODULE_LIST_BASE+='p10k '
declare SYSDEN64_MODULE_LIST_TOOLS=''
SYSDEN64_MODULE_LIST_TOOLS+='alacritty '
SYSDEN64_MODULE_LIST_TOOLS+='ansible '
SYSDEN64_MODULE_LIST_TOOLS+='awscli '
SYSDEN64_MODULE_LIST_TOOLS+='bat '
SYSDEN64_MODULE_LIST_TOOLS+='btop '
SYSDEN64_MODULE_LIST_TOOLS+='delta '
SYSDEN64_MODULE_LIST_TOOLS+='docker '
SYSDEN64_MODULE_LIST_TOOLS+='duf '
SYSDEN64_MODULE_LIST_TOOLS+='eza '
SYSDEN64_MODULE_LIST_TOOLS+='fd '
SYSDEN64_MODULE_LIST_TOOLS+='gcloud '
SYSDEN64_MODULE_LIST_TOOLS+='git '
SYSDEN64_MODULE_LIST_TOOLS+='github '
SYSDEN64_MODULE_LIST_TOOLS+='gpg '
SYSDEN64_MODULE_LIST_TOOLS+='hwatch '
SYSDEN64_MODULE_LIST_TOOLS+='keepassx '
SYSDEN64_MODULE_LIST_TOOLS+='kubectl '
SYSDEN64_MODULE_LIST_TOOLS+='lnav '
SYSDEN64_MODULE_LIST_TOOLS+='mc '
SYSDEN64_MODULE_LIST_TOOLS+='nvim '
SYSDEN64_MODULE_LIST_TOOLS+='ripgrep '
SYSDEN64_MODULE_LIST_TOOLS+='ssh '
SYSDEN64_MODULE_LIST_TOOLS+='terraform '
SYSDEN64_MODULE_LIST_TOOLS+='tmux '
SYSDEN64_MODULE_LIST_TOOLS+='zellij '

# DevBin64 / Installation path
readonly SYSDEN64_PATH_DEVBIN64="${SYSDEN64_PATH_DEVBIN64:-/opt/devbin64}"
# DevBin64 / Env Set script
readonly SYSDEN64_CMD_DEVBIN64_SET='./bin/dev-set'
# DevBin64 / Profile set script
readonly SYSDEN64_CMD_DEVBIN64_PROFILE='./bin/dev-profile-create'
# DevBin64 / Bootstrap path
readonly SYSDEN64_CMD_DEVBIN64_BOOTSTRAP="${SYSDEN64_PATH_DEVBIN64}/bin/dev-bootstrap"
# DevBin64 / Dev SysDen64
readonly SYSDEN64_CMD_DEVBIN64_SYSDEN64='./bin/dev-lib-sysden64'
# DevBin64 / Modules File
readonly SYSDEN64_FILE_DEVBIN64_MODULE='.devbin64-modules'
# DevBin64 / Modules
declare SYSDEN64_MODULE_DEVBIN64=''
SYSDEN64_MODULE_DEVBIN64+='bash\n'
SYSDEN64_MODULE_DEVBIN64+='git\n'
SYSDEN64_MODULE_DEVBIN64+='github\n'
SYSDEN64_MODULE_DEVBIN64+='gitleaks\n'
SYSDEN64_MODULE_DEVBIN64+='shellcheck\n'
SYSDEN64_MODULE_DEVBIN64+='sysden64\n'
# DevBin64 / Target profile
export DEV_PROFILE=''

#
# Functions
#

function version_register() {
  bl64_dbg_app_show_function "$@"
  local home="$1"
  echo "$SYSDEN64_VERSION" >"${home}/${SYSDEN64_PATH_VERSION}"
}

function module_setup() {
  bl64_dbg_app_show_function "$@"
  local home="$1"
  local module=''

  for module in $SYSDEN64_MODULE_LIST_BASE; do
    # shellcheck disable=SC1090
    bl64_check_file "${SYSDEN64_PATH_LIB}/${module}.bash" &&
      source "${SYSDEN64_PATH_LIB}/${module}.bash" &&
      "sysden64_${module}_setup" "$home" ||
      return $?
  done
  for module in $SYSDEN64_MODULE_LIST_TOOLS; do
    # shellcheck disable=SC1090
    bl64_check_file "${SYSDEN64_PATH_LIB}/${module}.bash" &&
      source "${SYSDEN64_PATH_LIB}/${module}.bash" &&
      "sysden64_${module}_setup" "$home" ||
      return $?
  done
}

function devbin64_setup() {
  bl64_dbg_app_show_function "$@"
  local home="$1"
  local repository="$2"
  local profile="$3"

  bl64_msg_show_phase 'prepare DevBin64'
  bl64_msg_show_task "source environment (${repository} - ${profile})"
  DEV_PROFILE="$profile"
  unset DEV_PATH_ROOT
  # shellcheck disable=SC1090
  cd "$repository" &&
    source "$SYSDEN64_CMD_DEVBIN64_SET" ||
    return $?

  bl64_msg_show_task "create/update profile (${profile})"
  "./$SYSDEN64_CMD_DEVBIN64_PROFILE" ||
    return $?

  bl64_msg_show_task "create/update home links to profile (${profile})"
  # shellcheck disable=SC2154
  bl64_fs_symlink_create \
    "${DEV_PATH_DOCS}" "${home}/${SYSDEN64_PREFIX}docs" "$BL64_VAR_ON" &&
    bl64_fs_symlink_create \
      "${DEV_PATH_SRC}" "${home}/${SYSDEN64_PREFIX}src" "$BL64_VAR_ON" &&
      bl64_fs_symlink_create \
      "${DEV_PATH_PROF_LOGS}" "${home}/${SYSDEN64_PREFIX}logs" "$BL64_VAR_ON" &&
    bl64_fs_symlink_create \
      "${DEV_PATH_PROF_VAULT}" "${home}/${SYSDEN64_PREFIX}vault" "$BL64_VAR_ON" &&
    bl64_fs_symlink_create \
      "${DEV_PATH_PROF_TMP}" "${home}/${SYSDEN64_PREFIX}tmp" "$BL64_VAR_ON" &&
    bl64_fs_symlink_create \
      "${DEV_PATH_PROF_ETC}" "${home}/${SYSDEN64_PREFIX}etc" "$BL64_VAR_ON" &&
    bl64_fs_symlink_create \
      "${DEV_PATH_PROF_VAR}" "${home}/${SYSDEN64_PREFIX}var" "$BL64_VAR_ON"
}

function xdg_setup() {
  bl64_dbg_app_show_function "$@"
  local home="$1"
  bl64_msg_show_phase 'prepare XDG'
  bl64_iam_xdg_create \
    "$home"
}

function deploy_home() {
  bl64_dbg_app_show_function "$@"
  local home="$1"
  local repository="$2"
  local profile="$3"

  xdg_setup "$home" ||
    return $?

  if bl64_lib_flag_is_enabled "$SYSDEN64_USE_DEVBIN64"; then
    devbin64_setup "$home" "$repository" "$profile" ||
      return $?
  fi
  module_setup "$home" &&
    version_register "$home"
}

function deploy_sysden() {
  bl64_dbg_app_show_function "$@"
  local repository="$1"

  # shellcheck disable=SC2059
  bl64_fs_dir_create \
    "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" \
    "$repository" &&
    cd "$repository" &&
    printf "$SYSDEN64_MODULE_DEVBIN64" >"${repository}/${SYSDEN64_FILE_DEVBIN64_MODULE}" &&
    "$SYSDEN64_CMD_DEVBIN64_BOOTSTRAP" &&
    "$SYSDEN64_CMD_DEVBIN64_SYSDEN64"
}

function deploy_profile() {
  bl64_dbg_app_show_function "$@"
  local home="$1"
  local repository="$2"
  local profile="$3"

  SYSDEN64_USE_DEVBIN64="$BL64_VAR_ON"
  deploy_sysden "$SYSDEN64_REPOSITORY" &&
    deploy_home "$SYSDEN64_HOME" "$SYSDEN64_REPOSITORY" "$SYSDEN64_PROFILE"
}

function switch_profile() {
  bl64_dbg_app_show_function "$@"
  local home="$1"
  local repository="$2"
  local profile="$3"

  SYSDEN64_USE_DEVBIN64="$BL64_VAR_ON"
  SYSDEN64_PROFILE_SWITCH="$BL64_VAR_ON"
  devbin64_setup "$home" "$repository" "$profile" &&
    module_setup "$home"
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function initialize() {
  bl64_dbg_app_show_function

  bl64_check_parameter 'SYSDEN64_COMMAND' ||
    { bl64_msg_help_show && return 1; }

  if [[ "$SYSDEN64_COMMAND" == 'deploy_home' ]]; then
    if bl64_lib_flag_is_enabled "$SYSDEN64_USE_DEVBIN64"; then
      bl64_check_directory "$SYSDEN64_REPOSITORY" &&
        bl64_check_file "${SYSDEN64_REPOSITORY}/${SYSDEN64_CMD_DEVBIN64_SET}" &&
        bl64_check_file "${SYSDEN64_REPOSITORY}/${SYSDEN64_CMD_DEVBIN64_PROFILE}" ||
        return $?
    fi
  elif [[ "$SYSDEN64_COMMAND" == 'switch_profile' ]]; then
    bl64_check_directory "$SYSDEN64_REPOSITORY" &&
      bl64_check_file "${SYSDEN64_REPOSITORY}/${SYSDEN64_CMD_DEVBIN64_SET}" &&
      bl64_check_file "${SYSDEN64_REPOSITORY}/${SYSDEN64_CMD_DEVBIN64_PROFILE}" ||
      return $?
  elif [[ "$SYSDEN64_COMMAND" =~ (deploy_sysden|deploy_profile) ]]; then
    bl64_check_command "$SYSDEN64_CMD_DEVBIN64_BOOTSTRAP" ||
      return $?
    if [[ -d "$SYSDEN64_REPOSITORY" ]]; then
      bl64_msg_show_error "target directory must not exist (${SYSDEN64_REPOSITORY})"
      # shellcheck disable=SC2086
      return $BL64_LIB_ERROR_TASK_FAILED
    fi
  fi
  bl64_check_directory "$SYSDEN64_PATH_ETC" &&
    bl64_check_directory "$SYSDEN64_PATH_LIB"
}

#
# Main
#

declare SYSDEN64_COMMAND=''
declare SYSDEN64_DEBUG="$BL64_DBG_TARGET_NONE"
declare SYSDEN64_OPTION=''
declare SYSDEN64_VERBOSE="$BL64_MSG_VERBOSE_APP"
declare SYSDEN64_HOME="$HOME"
declare SYSDEN64_REPOSITORY="${SYSDEN64_HOME}/${SYSDEN64_PREFIX}"
declare SYSDEN64_USE_DEVBIN64="$BL64_VAR_OFF"
declare SYSDEN64_PROFILE='default'
bl64_lib_script_version_set '5.0.0'
bl64_msg_help_usage_set '<-s|-l|-c|-w> [-o Home] [-i Repo] [-p Profile] [-d] [-V Verbose] [-D Debug] [-h]'
bl64_msg_help_about_set 'SysDen64 is an opinionated portable working environment for the DevOps/SRE/CloudAdmin/SysAdmin nomad'
# shellcheck disable=SC2016
bl64_msg_help_parameters_set \
  '-s         : Create persistent profile and deploy to home directory
-l         : Deploy configuration files to home directory
-c         : Create SysDen64 repository
-w         : Change current profile to a different one
-d         : Use SysDen64 repository for persistense. Valid for -l and -w only
-h         : Show help
-o Home    : Full path to the user home directory. Default: $HOME
-i Repo    : SysDen64 repository path. Default: $HOME/sd64
-p Profile : SysDen64 profile name. Required for -d and -w. Default: default
-V Verbose : Set verbosity level. Format: one of BL64_MSG_VERBOSE_*
-D Debug   : Enable debugging mode. Format: one of BL64_DBG_TARGET_*'

while getopts ':scldwo:i:p:V:D:h' SYSDEN64_OPTION; do
  case "$SYSDEN64_OPTION" in
  s) SYSDEN64_COMMAND='deploy_profile' ;;
  l) SYSDEN64_COMMAND='deploy_home' ;;
  c) SYSDEN64_COMMAND='deploy_sysden' ;;
  w) SYSDEN64_COMMAND='switch_profile' ;;
  d) SYSDEN64_USE_DEVBIN64="$BL64_VAR_ON" ;;
  o) SYSDEN64_HOME="$OPTARG" ;;
  i) SYSDEN64_REPOSITORY="$OPTARG" ;;
  p) SYSDEN64_PROFILE="$OPTARG" ;;
  V) SYSDEN64_VERBOSE="$OPTARG" ;;
  D) SYSDEN64_DEBUG="$OPTARG" ;;
  h) bl64_msg_help_show && exit 0 ;;
  *) bl64_msg_help_show && exit 1 ;;
  esac
done
bl64_dbg_set_level "$SYSDEN64_DEBUG" && bl64_msg_set_level "$SYSDEN64_VERBOSE" && initialize "$SYSDEN64_COMMAND" "$SYSDEN64_REPOSITORY" || exit $?

bl64_msg_show_setup "$BL64_VAR_DEFAULT" \
  'SYSDEN64_COMMAND' \
  'SYSDEN64_HOME' \
  'SYSDEN64_PROFILE' \
  'SYSDEN64_REPOSITORY'

bl64_msg_show_batch_start "$SYSDEN64_COMMAND"
case "$SYSDEN64_COMMAND" in
'deploy_profile') deploy_profile "$SYSDEN64_HOME" "$SYSDEN64_REPOSITORY" "$SYSDEN64_PROFILE" ;;
'deploy_home') deploy_home "$SYSDEN64_HOME" "$SYSDEN64_REPOSITORY" "$SYSDEN64_PROFILE";;
'deploy_sysden') deploy_sysden "$SYSDEN64_REPOSITORY" ;;
'switch_profile') switch_profile "$SYSDEN64_HOME" "$SYSDEN64_REPOSITORY" "$SYSDEN64_PROFILE" ;;
*) bl64_check_alert_parameter_invalid "$SYSDEN64_COMMAND" ;;
esac
bl64_msg_show_batch_finish $? "$SYSDEN64_COMMAND"
